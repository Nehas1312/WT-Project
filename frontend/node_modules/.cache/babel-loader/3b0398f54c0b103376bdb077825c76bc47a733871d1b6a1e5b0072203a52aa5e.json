{"ast":null,"code":"var _jsxFileName = \"D:\\\\Challenge-2\\\\frontend\\\\src\\\\Components\\\\NewReg.js\",\n  _s = $RefreshSig$();\n// New.js\nimport React, { useState } from \"react\";\nimport \"../Styles/newreg.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport services from \"../Services/dataServices\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst New = () => {\n  _s();\n  const [task, setTask] = useState([]);\n  const [newItem, setNewItem] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showDueDateMessage, setShowDueDateMessage] = useState(false);\n  const [confirmation, setConfirmation] = useState(null);\n  const [accomplished, setAccomplished] = useState(false);\n  const handleItemChange = e => {\n    setNewItem(e.target.value);\n  };\n  const handleDueDateChange = e => {\n    setDueDate(e.target.value);\n  };\n  const handleAccomplished = () => {\n    setAccomplished(!accomplished);\n  };\n  const handleItemSubmit = e => {\n    e.preventDefault();\n    try {\n      const taskNew = {\n        tname: newItem,\n        date: dueDate,\n        taccomplished: accomplished\n      };\n      console.log(\"tak \", taskNew);\n      services.postData(taskNew).then(response => {\n        setTask(task.concat(response));\n        setNewItem(\"\");\n        setDueDate(\"\");\n        setAccomplished(false);\n      });\n      setLoading(true); // Set loading state to true\n      // Simulate a loading delay (you can replace this with actual async logic)\n      setTimeout(() => {\n        console.log(\"New item:\", newItem);\n        console.log(\"Due date:\", dueDate);\n        setLoading(false); // Set loading state to false after handling the submission\n        setNewItem(\"\");\n        setDueDate(\"\");\n      }, 2000);\n    } // Simulated delay of 2 seconds\n    catch (error) {\n      setConfirmation(`Error submitting data. Please try again`);\n      console.error('Error submitting form data:', error);\n    }\n  };\n  const handleDueDateMouseEnter = () => {\n    setShowDueDateMessage(true);\n  };\n  const handleDueDateMouseLeave = () => {\n    setShowDueDateMessage(false);\n  };\n  const currentDate = new Date();\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const formattedDate = currentDate.toLocaleDateString('en-US', options);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleItemSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newItem,\n            onChange: handleItemChange,\n            placeholder: \"Enter task details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dueDate,\n            onChange: handleDueDateChange,\n            placeholder: \"DueDate\",\n            onMouseEnter: handleDueDateMouseEnter,\n            onMouseLeave: handleDueDateMouseLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), showDueDateMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"due-date-message\",\n            children: \"DUE DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-contentt\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: loading ?\n            /*#__PURE__*/\n            // Conditionally render loading icon if loading state is true\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TICK-T\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faClock,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"CK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true) : \"Add New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), confirmation && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: confirmation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(New, \"xDseN/Jd0uOQk+ZkEt6TTb+JKs8=\");\n_c = New;\nexport default New;\nvar _c;\n$RefreshReg$(_c, \"New\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faClock","services","jsxDEV","_jsxDEV","Fragment","_Fragment","New","_s","task","setTask","newItem","setNewItem","dueDate","setDueDate","loading","setLoading","showDueDateMessage","setShowDueDateMessage","confirmation","setConfirmation","accomplished","setAccomplished","handleItemChange","e","target","value","handleDueDateChange","handleAccomplished","handleItemSubmit","preventDefault","taskNew","tname","date","taccomplished","console","log","postData","then","response","concat","setTimeout","error","handleDueDateMouseEnter","handleDueDateMouseLeave","currentDate","Date","options","weekday","year","month","day","formattedDate","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","onChange","placeholder","onMouseEnter","onMouseLeave","icon","spin","_c","$RefreshReg$"],"sources":["D:/Challenge-2/frontend/src/Components/NewReg.js"],"sourcesContent":["// New.js\r\nimport React, { useState } from \"react\";\r\nimport \"../Styles/newreg.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport  services from \"../Services/dataServices\";\r\n\r\nconst New = () => {\r\n  const [task,setTask]= useState([]);\r\n  const [newItem, setNewItem] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDueDateMessage, setShowDueDateMessage] = useState(false);\r\n  const [confirmation, setConfirmation] = useState(null);\r\n  const [accomplished,setAccomplished] = useState(false);\r\n\r\n\r\n  const handleItemChange = (e) => {\r\n    setNewItem(e.target.value);\r\n  };\r\n\r\n  const handleDueDateChange = (e) => {\r\n    setDueDate(e.target.value);\r\n  };\r\n  const handleAccomplished = () => {\r\n    setAccomplished(!accomplished);\r\n  };\r\n\r\n  const handleItemSubmit = (e) => {\r\n    e.preventDefault();\r\n    try{\r\n    const taskNew = {\r\n      tname : newItem,\r\n      date :dueDate,\r\n      taccomplished :accomplished\r\n    };\r\n    console.log(\"tak \", taskNew)\r\n    services\r\n    .postData(taskNew)\r\n    .then(response=>{\r\n      setTask(task.concat(response))\r\n      setNewItem(\"\");\r\n      setDueDate(\"\");\r\n      setAccomplished(false);\r\n    })\r\n    setLoading(true); // Set loading state to true\r\n    // Simulate a loading delay (you can replace this with actual async logic)\r\n    setTimeout(() => {\r\n      console.log(\"New item:\", newItem);\r\n      console.log(\"Due date:\", dueDate);\r\n      setLoading(false); // Set loading state to false after handling the submission\r\n      setNewItem(\"\");\r\n      setDueDate(\"\");\r\n    }, 2000);} // Simulated delay of 2 seconds\r\n    catch (error) {\r\n      setConfirmation(`Error submitting data. Please try again`);\r\n      console.error('Error submitting form data:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleDueDateMouseEnter = () => {\r\n    setShowDueDateMessage(true);\r\n  };\r\n\r\n  const handleDueDateMouseLeave = () => {\r\n    setShowDueDateMessage(false);\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  const formattedDate = currentDate.toLocaleDateString('en-US', options);\r\n\r\n  return (\r\n    <div className=\"new-container\">\r\n      <div className=\"new-content\">\r\n        <h2>Create New Task</h2>\r\n        <p>{formattedDate}</p> {/* Display the current day and date */}\r\n        <form onSubmit={handleItemSubmit}>\r\n        <div class=\"input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            value={newItem}\r\n            onChange={handleItemChange}\r\n            placeholder=\"Enter task details\"\r\n          />\r\n          \r\n          <input\r\n            type=\"date\"\r\n            value={dueDate}\r\n            onChange={handleDueDateChange}\r\n            placeholder=\"DueDate\"\r\n            onMouseEnter={handleDueDateMouseEnter}\r\n            onMouseLeave={handleDueDateMouseLeave}\r\n          />\r\n          {showDueDateMessage && <p className=\"due-date-message\">DUE DATE</p>}\r\n          </div>\r\n          <br></br>\r\n          <br></br>\r\n          <div className=\"new-contentt\">\r\n            <button type=\"submit\">\r\n              {loading ? ( // Conditionally render loading icon if loading state is true\r\n              <>\r\n              <span>TICK-T</span>\r\n                <FontAwesomeIcon icon={faClock} spin  />\r\n                <span>CK</span>\r\n                </>\r\n              ) : (\r\n                \"Add New Task\"\r\n              )}</button>\r\n          </div>\r\n        </form>\r\n        {confirmation && <p>{confirmation}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default New;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}