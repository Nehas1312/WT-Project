{"ast":null,"code":"var _jsxFileName = \"D:\\\\Challenge-2\\\\frontend\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport services from \"../Services/dataServices\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Table, Button, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [taskdata, setTaskData] = useState([]);\n  const [loadingTasks, setLoadingTasks] = useState([]); // State to manage loading status of each task\n\n  useEffect(() => {\n    console.log(\"effect\");\n    services.getAll().then(response => {\n      console.log(response);\n      setTaskData(response);\n    }).catch(err => {\n      console.log(`Error while fetching data from DB :${err}`);\n    });\n  }, []);\n  const handleSubmission = taskId => {\n    // Update loading status for the specific task\n    setLoadingTasks(prevState => [...prevState, taskId]);\n\n    // Find the task to be updated\n    const taskToUpdate = taskdata.find(task => task.id === taskId);\n\n    // Update the task's taccomplished value\n    const updatedTask = {\n      ...taskToUpdate,\n      taccomplished: !taskToUpdate.taccomplished\n    };\n\n    // Simulate a 2-second delay before sending the update request\n    setTimeout(() => {\n      services.updateData(taskId, updatedTask).then(response => {\n        setTaskData(prevTaskData => prevTaskData.map(task => task.id === taskId ? updatedTask : task));\n\n        // Update loading status for the specific task after completion\n        setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\n      }).catch(error => {\n        console.error(\"Error updating task:\", error);\n        // Update loading status for the specific task after failure\n        setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\n      });\n    }, 2000); // 2-second delay\n  };\n  const isTaskLoading = taskId => {\n    return loadingTasks.includes(taskId);\n  };\n\n  // Function to handle delete request\n  const handleDelete = taskId => {\n    services.deleteData(taskId).then(() => {\n      setTaskData(prevTaskData => prevTaskData.filter(task => task.id !== taskId));\n    }).catch(error => {\n      console.error(\"Error deleting task:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"home-container mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"ALL TASKS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      className: \"task-list\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due-Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Submissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskdata.map(task => {\n          const date = new Date(task.date);\n          const formattedDate = date.toLocaleDateString();\n          const truncatedTaskName = task.tname.slice(0, 20); // Take only the first 20 characters of the task name\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"task-name\",\n              children: truncatedTaskName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"task-date\",\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"submission\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => handleSubmission(task.id),\n                disabled: task.taccomplished,\n                children: isTaskLoading(task.id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"+10\\xA0P\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"border\",\n                    size: \"sm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\xA0INTS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : task.taccomplished ? \"Completed\" : \"Mark as Submitted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"delete\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDelete(task.id),\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"UHAg9Fs3smv4zqh2cEIMcbZRJjc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","services","Container","Table","Button","Spinner","FontAwesomeIcon","faClock","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","taskdata","setTaskData","loadingTasks","setLoadingTasks","console","log","getAll","then","response","catch","err","handleSubmission","taskId","prevState","taskToUpdate","find","task","id","updatedTask","taccomplished","setTimeout","updateData","prevTaskData","map","filter","error","isTaskLoading","includes","handleDelete","deleteData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","date","Date","formattedDate","toLocaleDateString","truncatedTaskName","tname","slice","variant","onClick","disabled","animation","size","icon","_c","$RefreshReg$"],"sources":["D:/Challenge-2/frontend/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport services from \"../Services/dataServices\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Table, Button, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClock, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home = () => {\r\n  const [taskdata, setTaskData] = useState([]);\r\n  const [loadingTasks, setLoadingTasks] = useState([]); // State to manage loading status of each task\r\n\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    services\r\n      .getAll()\r\n      .then((response) => {\r\n        console.log(response);\r\n        setTaskData(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error while fetching data from DB :${err}`);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmission = (taskId) => {\r\n    // Update loading status for the specific task\r\n    setLoadingTasks((prevState) => [...prevState, taskId]);\r\n\r\n    // Find the task to be updated\r\n    const taskToUpdate = taskdata.find((task) => task.id === taskId);\r\n\r\n    // Update the task's taccomplished value\r\n    const updatedTask = {\r\n      ...taskToUpdate,\r\n      taccomplished: !taskToUpdate.taccomplished,\r\n    };\r\n\r\n    // Simulate a 2-second delay before sending the update request\r\n    setTimeout(() => {\r\n      services\r\n        .updateData(taskId, updatedTask)\r\n        .then((response) => {\r\n          setTaskData((prevTaskData) =>\r\n            prevTaskData.map((task) =>\r\n              task.id === taskId ? updatedTask : task\r\n            )\r\n          );\r\n\r\n          // Update loading status for the specific task after completion\r\n          setLoadingTasks((prevState) =>\r\n            prevState.filter((id) => id !== taskId)\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error updating task:\", error);\r\n          // Update loading status for the specific task after failure\r\n          setLoadingTasks((prevState) =>\r\n            prevState.filter((id) => id !== taskId)\r\n          );\r\n        });\r\n    }, 2000); // 2-second delay\r\n  };\r\n\r\n  const isTaskLoading = (taskId) => {\r\n    return loadingTasks.includes(taskId);\r\n  };\r\n\r\n  // Function to handle delete request\r\n  const handleDelete = (taskId) => {\r\n    services\r\n      .deleteData(taskId)\r\n      .then(() => {\r\n        setTaskData((prevTaskData) =>\r\n          prevTaskData.filter((task) => task.id !== taskId)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting task:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"home-container mt-3\">\r\n      <h1 className=\"text-center mb-4\">ALL TASKS</h1>\r\n      <Table className=\"task-list\" striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Tasks</th>\r\n            <th>Due-Date</th>\r\n            <th>Submissions</th>\r\n            <th>Delete</th> {/* Add a new table header for the delete button */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {taskdata.map((task) => {\r\n            const date = new Date(task.date);\r\n            const formattedDate = date.toLocaleDateString();\r\n            const truncatedTaskName = task.tname.slice(0, 20); // Take only the first 20 characters of the task name\r\n\r\n            return (\r\n              <tr key={task.id} className=\"task-item\">\r\n                <td className=\"task-name\">{truncatedTaskName}</td>\r\n                <td className=\"task-date\">{formattedDate}</td>\r\n                <td className=\"submission\">\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => handleSubmission(task.id)}\r\n                    disabled={task.taccomplished}\r\n                  >\r\n                    {isTaskLoading(task.id) ? (\r\n                      <>\r\n                        <span>+10&nbsp;P</span>\r\n                        <Spinner animation=\"border\" size=\"sm\" />\r\n                        <span>&nbsp;INTS</span>\r\n                      </>\r\n                    ) : task.taccomplished ? (\r\n                      \"Completed\"\r\n                    ) : (\r\n                      \"Mark as Submitted\"\r\n                    )}\r\n                  </Button>\r\n                </td>\r\n                <td className=\"delete\">\r\n                  {\" \"}\r\n                  {/* Add a new table cell for the delete button */}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDelete(task.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} />{\" \"}\r\n                    {/* Add the delete icon */}\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}