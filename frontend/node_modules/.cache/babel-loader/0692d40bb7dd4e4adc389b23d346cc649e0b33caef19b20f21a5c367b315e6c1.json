{"ast":null,"code":"var _jsxFileName = \"D:\\\\Challenge-2\\\\frontend\\\\src\\\\Components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../Styles/home.css\";\nimport services from \"../Services/dataServices\";\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [taskdata, setTaskData] = useState([]);\n  const [loadingTasks, setLoadingTasks] = useState([]); // State to manage loading status of each task\n\n  useEffect(() => {\n    console.log('effect');\n    services.getAll().then(response => {\n      console.log(response);\n      setTaskData(response);\n    }).catch(err => {\n      console.log(`Error while fetching data from DB :${err}`);\n    });\n  }, []);\n  const handleSubmission = taskId => {\n    // Update loading status for the specific task\n    setLoadingTasks(prevState => [...prevState, taskId]);\n\n    // Find the task to be updated\n    const taskToUpdate = taskdata.find(task => task.id === taskId);\n\n    // Update the task's taccomplished value\n    const updatedTask = {\n      ...taskToUpdate,\n      taccomplished: !taskToUpdate.taccomplished\n    };\n\n    // Simulate a 2-second delay before sending the update request\n    setTimeout(() => {\n      services.updateData(taskId, updatedTask).then(response => {\n        setTaskData(prevTaskData => prevTaskData.map(task => task.id === taskId ? updatedTask : task));\n\n        // Update loading status for the specific task after completion\n        setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\n      }).catch(error => {\n        console.error('Error updating task:', error);\n        // Update loading status for the specific task after failure\n        setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\n      });\n    }, 2000); // 2-second delay\n  };\n  const isTaskLoading = taskId => {\n    return loadingTasks.includes(taskId);\n  };\n\n  // Function to handle delete request\n  const handleDelete = taskId => {\n    services.deleteData(taskId).then(() => {\n      setTaskData(prevTaskData => prevTaskData.filter(task => task.id !== taskId));\n    }).catch(error => {\n      console.error('Error deleting task:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ALL TASKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due-Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Submissions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: taskdata.map(task => {\n            const date = new Date(task.date);\n            const formattedDate = date.toLocaleDateString();\n            const truncatedTaskName = task.tname.slice(0, 20); // Take only the first 20 characters of the task name\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"task-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"task-name\",\n                children: truncatedTaskName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"task-date\",\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"submission\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  onClick: () => handleSubmission(task.id),\n                  disabled: task.taccomplished // Disable the button if the task is already completed\n                  ,\n                  children: isTaskLoading(task.id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"+10   P\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faClock,\n                      spin: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"INTS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true) : task.taccomplished ? 'Completed' : 'Mark as Submitted'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"delete\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleDelete(task.id),\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"UHAg9Fs3smv4zqh2cEIMcbZRJjc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","services","faClock","FontAwesomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","taskdata","setTaskData","loadingTasks","setLoadingTasks","console","log","getAll","then","response","catch","err","handleSubmission","taskId","prevState","taskToUpdate","find","task","id","updatedTask","taccomplished","setTimeout","updateData","prevTaskData","map","filter","error","isTaskLoading","includes","handleDelete","deleteData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","date","Date","formattedDate","toLocaleDateString","truncatedTaskName","tname","slice","type","onClick","disabled","icon","spin","faTrash","_c","$RefreshReg$"],"sources":["D:/Challenge-2/frontend/src/Components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../Styles/home.css\";\r\nimport services from \"../Services/dataServices\";\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Home = () => {\r\n  const [taskdata, setTaskData] = useState([]);\r\n  const [loadingTasks, setLoadingTasks] = useState([]); // State to manage loading status of each task\r\n\r\n  useEffect(() => {\r\n    console.log('effect');\r\n    services\r\n      .getAll()\r\n      .then(response => {\r\n        console.log(response);\r\n        setTaskData(response);\r\n      })\r\n      .catch(err => {\r\n        console.log(`Error while fetching data from DB :${err}`);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmission = (taskId) => {\r\n    // Update loading status for the specific task\r\n    setLoadingTasks(prevState => [...prevState, taskId]);\r\n  \r\n    // Find the task to be updated\r\n    const taskToUpdate = taskdata.find(task => task.id === taskId);\r\n  \r\n    // Update the task's taccomplished value\r\n    const updatedTask = { ...taskToUpdate, taccomplished: !taskToUpdate.taccomplished };\r\n  \r\n    // Simulate a 2-second delay before sending the update request\r\n    setTimeout(() => {\r\n      services\r\n        .updateData(taskId, updatedTask)\r\n        .then(response => {\r\n          setTaskData(prevTaskData =>\r\n            prevTaskData.map(task => (task.id === taskId ? updatedTask : task))\r\n          );\r\n  \r\n          // Update loading status for the specific task after completion\r\n          setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating task:', error);\r\n          // Update loading status for the specific task after failure\r\n          setLoadingTasks(prevState => prevState.filter(id => id !== taskId));\r\n        });\r\n    }, 2000); // 2-second delay\r\n  };\r\n  \r\n\r\n  const isTaskLoading = (taskId) => {\r\n    return loadingTasks.includes(taskId);\r\n  };\r\n\r\n    // Function to handle delete request\r\n    const handleDelete = (taskId) => {\r\n      services\r\n        .deleteData(taskId)\r\n        .then(() => {\r\n          setTaskData(prevTaskData => prevTaskData.filter(task => task.id !== taskId));\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting task:', error);\r\n        });\r\n    };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"home-content\">\r\n        <h1>ALL TASKS</h1>\r\n        <table className=\"task-list\">\r\n          <thead>\r\n            <tr>\r\n              <th>Tasks</th>\r\n              <th>Due-Date</th>\r\n              <th>Submissions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {taskdata.map((task) => {\r\n              const date = new Date(task.date);\r\n              const formattedDate = date.toLocaleDateString();\r\n              const truncatedTaskName = task.tname.slice(0, 20); // Take only the first 20 characters of the task name\r\n              \r\n              return (\r\n                <tr key={task.id} className=\"task-item\">\r\n                  <td className=\"task-name\">{truncatedTaskName}</td>\r\n                  <td className=\"task-date\">{formattedDate}</td>\r\n                  <td className=\"submission\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            onClick={() => handleSubmission(task.id)}\r\n                            disabled={task.taccomplished} // Disable the button if the task is already completed\r\n                          >\r\n                            {isTaskLoading(task.id) ? (\r\n                              <>\r\n                                <span>+10   P</span>\r\n                                <FontAwesomeIcon icon={faClock} spin />\r\n                                <span>INTS</span>\r\n                              </>\r\n                            ) : (task.taccomplished ? 'Completed' : 'Mark as Submitted')}\r\n                          </button>\r\n                        </td>\r\n                        <td className=\"delete\"> {/* Add a new table cell for the delete button */}\r\n                      <button type=\"button\" onClick={() => handleDelete(task.id)}>\r\n                        <FontAwesomeIcon icon={faTrash} /> {/* Add the delete icon */}\r\n                      </button>\r\n                    </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjE,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBd,QAAQ,CACLe,MAAM,CAAC,CAAC,CACRC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;MACrBP,WAAW,CAACO,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZN,OAAO,CAACC,GAAG,CAAE,sCAAqCK,GAAI,EAAC,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC;IACAT,eAAe,CAACU,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,MAAM,CAAC,CAAC;;IAEpD;IACA,MAAME,YAAY,GAAGd,QAAQ,CAACe,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC;;IAE9D;IACA,MAAMM,WAAW,GAAG;MAAE,GAAGJ,YAAY;MAAEK,aAAa,EAAE,CAACL,YAAY,CAACK;IAAc,CAAC;;IAEnF;IACAC,UAAU,CAAC,MAAM;MACf7B,QAAQ,CACL8B,UAAU,CAACT,MAAM,EAAEM,WAAW,CAAC,CAC/BX,IAAI,CAACC,QAAQ,IAAI;QAChBP,WAAW,CAACqB,YAAY,IACtBA,YAAY,CAACC,GAAG,CAACP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGM,WAAW,GAAGF,IAAK,CACpE,CAAC;;QAED;QACAb,eAAe,CAACU,SAAS,IAAIA,SAAS,CAACW,MAAM,CAACP,EAAE,IAAIA,EAAE,KAAKL,MAAM,CAAC,CAAC;MACrE,CAAC,CAAC,CACDH,KAAK,CAACgB,KAAK,IAAI;QACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;QACAtB,eAAe,CAACU,SAAS,IAAIA,SAAS,CAACW,MAAM,CAACP,EAAE,IAAIA,EAAE,KAAKL,MAAM,CAAC,CAAC;MACrE,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAGD,MAAMc,aAAa,GAAId,MAAM,IAAK;IAChC,OAAOV,YAAY,CAACyB,QAAQ,CAACf,MAAM,CAAC;EACtC,CAAC;;EAEC;EACA,MAAMgB,YAAY,GAAIhB,MAAM,IAAK;IAC/BrB,QAAQ,CACLsC,UAAU,CAACjB,MAAM,CAAC,CAClBL,IAAI,CAAC,MAAM;MACVN,WAAW,CAACqB,YAAY,IAAIA,YAAY,CAACE,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;IAC9E,CAAC,CAAC,CACDH,KAAK,CAACgB,KAAK,IAAI;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAEH,oBACE9B,OAAA;IAAKmC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BpC,OAAA;MAAKmC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpC,OAAA;QAAAoC,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBxC,OAAA;QAAOmC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC1BpC,OAAA;UAAAoC,QAAA,eACEpC,OAAA;YAAAoC,QAAA,gBACEpC,OAAA;cAAAoC,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdxC,OAAA;cAAAoC,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBxC,OAAA;cAAAoC,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRxC,OAAA;UAAAoC,QAAA,EACG/B,QAAQ,CAACuB,GAAG,CAAEP,IAAI,IAAK;YACtB,MAAMoB,IAAI,GAAG,IAAIC,IAAI,CAACrB,IAAI,CAACoB,IAAI,CAAC;YAChC,MAAME,aAAa,GAAGF,IAAI,CAACG,kBAAkB,CAAC,CAAC;YAC/C,MAAMC,iBAAiB,GAAGxB,IAAI,CAACyB,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;YAEnD,oBACE/C,OAAA;cAAkBmC,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACrCpC,OAAA;gBAAImC,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAES;cAAiB;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAClDxC,OAAA;gBAAImC,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEO;cAAa;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9CxC,OAAA;gBAAImC,SAAS,EAAC,YAAY;gBAAAC,QAAA,eAClBpC,OAAA;kBACEgD,IAAI,EAAC,QAAQ;kBACbC,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACK,IAAI,CAACC,EAAE,CAAE;kBACzC4B,QAAQ,EAAE7B,IAAI,CAACG,aAAc,CAAC;kBAAA;kBAAAY,QAAA,EAE7BL,aAAa,CAACV,IAAI,CAACC,EAAE,CAAC,gBACrBtB,OAAA,CAAAE,SAAA;oBAAAkC,QAAA,gBACEpC,OAAA;sBAAAoC,QAAA,EAAM;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACpBxC,OAAA,CAACF,eAAe;sBAACqD,IAAI,EAAEtD,OAAQ;sBAACuD,IAAI;oBAAA;sBAAAf,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eACvCxC,OAAA;sBAAAoC,QAAA,EAAM;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA,eACjB,CAAC,GACAnB,IAAI,CAACG,aAAa,GAAG,WAAW,GAAG;gBAAoB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLxC,OAAA;gBAAImC,SAAS,EAAC,QAAQ;gBAAAC,QAAA,GAAC,GAAC,eAC1BpC,OAAA;kBAAQgD,IAAI,EAAC,QAAQ;kBAACC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACZ,IAAI,CAACC,EAAE,CAAE;kBAAAc,QAAA,gBACzDpC,OAAA,CAACF,eAAe;oBAACqD,IAAI,EAAEE;kBAAQ;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAtBAnB,IAAI,CAACC,EAAE;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuBZ,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAlHID,IAAI;AAAAmD,EAAA,GAAJnD,IAAI;AAoHV,eAAeA,IAAI;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}